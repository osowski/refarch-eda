{"componentChunkName":"component---src-pages-concepts-events-versus-messages-index-mdx","path":"/concepts/events-versus-messages/","result":{"pageContext":{"frontmatter":{"title":"Events versus Messages","description":"Comparing and contrasting events and messages as communication artifacts in distributed systems."},"relativePagePath":"/concepts/events-versus-messages/index.mdx","titleType":"append","MdxNode":{"id":"d9302f03-504e-5f49-a8ea-e86d7d9bc17c","children":[],"parent":"cf9f4233-2844-5d8d-b2c5-a84bcc156880","internal":{"content":"---\ntitle: Events versus Messages\ndescription: Comparing and contrasting events and messages as communication artifacts in distributed systems.\n---\n\n<InlineNotification kind=\"warning\">Content currently under review - expand via work in cloudnative101.dev</InlineNotification>\n\n## Events and Messages\n\nThere is a long history of *messaging* in IT systems.  You can easily see an event driven solution and events in the context of messaging systems and messages. However, there are different characteristics that are worth considering:\n\n* **Messaging:** Messages transport a payload and messages are persisted until consumed. Message consumers are typically directly targeted and related to the producer who cares that the message has been delivered and processed.\n* **Events:** Events are persisted as a replayable stream history. Event consumers are not tied to the producer. An event is a record of something that has happened and so can't be changed. (You can't change history.)\n\n![](./images/evt-msg.png)\n\n## Messaging versus event streaming\n\nWe recommend reading [this article](https://developer.ibm.com/messaging/2018/05/18/comparing-messaging-event-streaming-use-cases/) and [this one](https://developer.ibm.com/messaging/2019/02/05/comparing-messaging-pub-sub-and-event-streams/), to get insight on messaging (focusing on operations / actions to be performed by a system or service) versus events (focusing on the state / facts of a system with no knowledge of the downstream processing). To summarize messaging (like MQ) are to support:\n\n* Transient Data: data is only stored until a consumer has processed the message, or it expires.\n* Request / reply most of the time.\n* Targeted reliable delivery: targeted to the entity that will process the request or receive the response. Reliable with transaction support.\n\nFor events:\n\n* Stream history: consumers are interested in historic events, not just the most recent.\n* Scalable Consumption: A single event is consumed by many consumers with limited impact as the number of consumers grow.\n* Immutable Data.\n* Decoupling of producers and consumers.\n","type":"Mdx","contentDigest":"50cced352424c90bc35dec8cade3846f","counter":330,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Events versus Messages","description":"Comparing and contrasting events and messages as communication artifacts in distributed systems."},"exports":{},"rawBody":"---\ntitle: Events versus Messages\ndescription: Comparing and contrasting events and messages as communication artifacts in distributed systems.\n---\n\n<InlineNotification kind=\"warning\">Content currently under review - expand via work in cloudnative101.dev</InlineNotification>\n\n## Events and Messages\n\nThere is a long history of *messaging* in IT systems.  You can easily see an event driven solution and events in the context of messaging systems and messages. However, there are different characteristics that are worth considering:\n\n* **Messaging:** Messages transport a payload and messages are persisted until consumed. Message consumers are typically directly targeted and related to the producer who cares that the message has been delivered and processed.\n* **Events:** Events are persisted as a replayable stream history. Event consumers are not tied to the producer. An event is a record of something that has happened and so can't be changed. (You can't change history.)\n\n![](./images/evt-msg.png)\n\n## Messaging versus event streaming\n\nWe recommend reading [this article](https://developer.ibm.com/messaging/2018/05/18/comparing-messaging-event-streaming-use-cases/) and [this one](https://developer.ibm.com/messaging/2019/02/05/comparing-messaging-pub-sub-and-event-streams/), to get insight on messaging (focusing on operations / actions to be performed by a system or service) versus events (focusing on the state / facts of a system with no knowledge of the downstream processing). To summarize messaging (like MQ) are to support:\n\n* Transient Data: data is only stored until a consumer has processed the message, or it expires.\n* Request / reply most of the time.\n* Targeted reliable delivery: targeted to the entity that will process the request or receive the response. Reliable with transaction support.\n\nFor events:\n\n* Stream history: consumers are interested in historic events, not just the most recent.\n* Scalable Consumption: A single event is consumed by many consumers with limited impact as the number of consumers grow.\n* Immutable Data.\n* Decoupling of producers and consumers.\n","fileAbsolutePath":"/home/runner/work/refarch-eda/refarch-eda/docs/src/pages/concepts/events-versus-messages/index.mdx"}}}}