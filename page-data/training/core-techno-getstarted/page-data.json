{"componentChunkName":"component---src-pages-training-core-techno-getstarted-mdx","path":"/training/core-techno-getstarted/","result":{"pageContext":{"frontmatter":{"title":"Getting started around the core technologies used in EDA","description":"Getting started around the core technologies used in EDA"},"relativePagePath":"/training/core-techno-getstarted.mdx","titleType":"append","MdxNode":{"id":"16e020fc-ae1f-52b5-ad6e-af83be829ae4","children":[],"parent":"2814cbd2-aa9d-56d3-af72-227c1dcb3eaa","internal":{"content":"---\ntitle: Getting started around the core technologies used in EDA\ndescription: Getting started around the core technologies used in EDA\n---\n\n!!! abstract\n    We expect you have some good understanding of the following technologies:\n\n    * Nodejs / Javascript / Typescripts\n    * Java 1.8 amd microprofile architecture\n    * Python 3.6\n    * Angular 7, HTML, CSS  - This is for the user interface but this is more optional.\n    * Maven, npm, bash\n    * WebSphere Liberty or OpenLiberty\n    * Docker\n    * Docker compose\n    * Helm\n    * Kubernetes\n    * Apache Kafka, Kafka API\n\nFrom the list above, the following getting started and tutorials can be studied to get a good pre-requisite knowledge for EDA adoption. You can skip those tutorials if you are already confortable on those technologies.\n\n### Java \n\n* [From zero to hero in Java 1.8 - an infoworld good article](https://www.infoworld.com/article/3130466/java/java-8-programming-for-beginners-go-from-zero-to-hero.html)\n* [Getting started with Open Liberty from the openliberty.io site.](https://openliberty.io/guides/getting-started.html)\n* Another [Open Liberty getting started application from IBM Cloud team](https://github.com/IBM-Cloud/get-started-java)\n* [Getting started with Apache Maven](https://maven.apache.org/what-is-maven.html)\n* [Java microprofile application](https://microprofile.io/)\n* [Deploy MicroProfile-based Java microservices on Kubernetes](https://developer.ibm.com/patterns/deploy-microprofile-java-microservices-on-kubernetes/)\n\n### Nodejs\n\n* [Getting started Nodejs and npm](https://nodejs.org/en/docs/guides/getting-started-guide/)\n\n### Angular\n\nOne of the repository includes an Angular app, so if you want to be familiar with Angular here are two good articles:\n\n* [Angular tutorial](https://angular.io/tutorial) - This is for the user interface but this is more optional.\n* [Applying a test driven practice for angular application](https://github.com/ibm-cloud-architecture/refarch-caseportal-app/blob/master/docs/tdd.md)\n\n### Python\n\nThe integration tests are done in Python to illustrate how to integrate kafka with python, and also because it is simple to do develop tests with this scripting language: \n\n* A good [getting started in Python](https://www.python.org/about/gettingstarted/)\n\n\n### Kubernetes, docker\n\n\n* In case you do not know it, there is this [Docker getting started tutorial](https://docs.docker.com/get-started/)\n* As we can use docker compose to control the dependencies between microservices and run all the solution as docker containers, it is important to read the [Docker compose - getting started](https://docs.docker.com/compose/gettingstarted/) article. \n* [Kubernetes](https://kubernetes.io/docs/tutorials/kubernetes-basics/) and IBM developer [learning path for Kubernetes](https://developer.ibm.com/series/kubernetes-learning-path/) and the Garage course [Kubernetes 101](https://www.ibm.com/cloud/garage/content/course/kubernetes-101/0).\n* [Use the \"Develop a Kubernetes app with Helm\" toolchain on IBM Cloud](https://www.ibm.com/cloud/garage/tutorials/use-develop-kubernetes-app-with-helm-toolchain)\n* [Understand docker networking](https://docs.docker.com/network/) as we use docker compose to run the reference implementation locally. \n* This is still optional but as we will adopt Knative, [this introduction](https://developer.ibm.com/articles/knative-what-is-it-why-you-should-care/) is relevant to read.\n* [How to deploy, manage, and secure your container-based workloads on IKS](https://www.ibm.com/blogs/bluemix/2017/05/kubernetes-and-bluemix-container-based-workloads-part1/) and [part 2](https://www.ibm.com/blogs/bluemix/2017/05/kubernetes-and-bluemix-container-based-workloads-part2/)\n\n","type":"Mdx","contentDigest":"329f6bea3a9d1bae2e21b95dc296fe58","counter":261,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Getting started around the core technologies used in EDA","description":"Getting started around the core technologies used in EDA"},"exports":{},"rawBody":"---\ntitle: Getting started around the core technologies used in EDA\ndescription: Getting started around the core technologies used in EDA\n---\n\n!!! abstract\n    We expect you have some good understanding of the following technologies:\n\n    * Nodejs / Javascript / Typescripts\n    * Java 1.8 amd microprofile architecture\n    * Python 3.6\n    * Angular 7, HTML, CSS  - This is for the user interface but this is more optional.\n    * Maven, npm, bash\n    * WebSphere Liberty or OpenLiberty\n    * Docker\n    * Docker compose\n    * Helm\n    * Kubernetes\n    * Apache Kafka, Kafka API\n\nFrom the list above, the following getting started and tutorials can be studied to get a good pre-requisite knowledge for EDA adoption. You can skip those tutorials if you are already confortable on those technologies.\n\n### Java \n\n* [From zero to hero in Java 1.8 - an infoworld good article](https://www.infoworld.com/article/3130466/java/java-8-programming-for-beginners-go-from-zero-to-hero.html)\n* [Getting started with Open Liberty from the openliberty.io site.](https://openliberty.io/guides/getting-started.html)\n* Another [Open Liberty getting started application from IBM Cloud team](https://github.com/IBM-Cloud/get-started-java)\n* [Getting started with Apache Maven](https://maven.apache.org/what-is-maven.html)\n* [Java microprofile application](https://microprofile.io/)\n* [Deploy MicroProfile-based Java microservices on Kubernetes](https://developer.ibm.com/patterns/deploy-microprofile-java-microservices-on-kubernetes/)\n\n### Nodejs\n\n* [Getting started Nodejs and npm](https://nodejs.org/en/docs/guides/getting-started-guide/)\n\n### Angular\n\nOne of the repository includes an Angular app, so if you want to be familiar with Angular here are two good articles:\n\n* [Angular tutorial](https://angular.io/tutorial) - This is for the user interface but this is more optional.\n* [Applying a test driven practice for angular application](https://github.com/ibm-cloud-architecture/refarch-caseportal-app/blob/master/docs/tdd.md)\n\n### Python\n\nThe integration tests are done in Python to illustrate how to integrate kafka with python, and also because it is simple to do develop tests with this scripting language: \n\n* A good [getting started in Python](https://www.python.org/about/gettingstarted/)\n\n\n### Kubernetes, docker\n\n\n* In case you do not know it, there is this [Docker getting started tutorial](https://docs.docker.com/get-started/)\n* As we can use docker compose to control the dependencies between microservices and run all the solution as docker containers, it is important to read the [Docker compose - getting started](https://docs.docker.com/compose/gettingstarted/) article. \n* [Kubernetes](https://kubernetes.io/docs/tutorials/kubernetes-basics/) and IBM developer [learning path for Kubernetes](https://developer.ibm.com/series/kubernetes-learning-path/) and the Garage course [Kubernetes 101](https://www.ibm.com/cloud/garage/content/course/kubernetes-101/0).\n* [Use the \"Develop a Kubernetes app with Helm\" toolchain on IBM Cloud](https://www.ibm.com/cloud/garage/tutorials/use-develop-kubernetes-app-with-helm-toolchain)\n* [Understand docker networking](https://docs.docker.com/network/) as we use docker compose to run the reference implementation locally. \n* This is still optional but as we will adopt Knative, [this introduction](https://developer.ibm.com/articles/knative-what-is-it-why-you-should-care/) is relevant to read.\n* [How to deploy, manage, and secure your container-based workloads on IKS](https://www.ibm.com/blogs/bluemix/2017/05/kubernetes-and-bluemix-container-based-workloads-part1/) and [part 2](https://www.ibm.com/blogs/bluemix/2017/05/kubernetes-and-bluemix-container-based-workloads-part2/)\n\n","fileAbsolutePath":"/home/runner/work/refarch-eda/refarch-eda/docs-gatsby/src/pages/training/core-techno-getstarted.mdx"}}}}